{
	"info": {
		"_postman_id": "ff7c9fda-8ed9-444b-addc-91cbe79a73d5",
		"name": "postman-restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET /booking",
			"item": [
				{
					"name": "Get all IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response body has 10 elements\", function () {",
									"    const data = pm.response.json();",
									"    pm.expect(data.length).to.equal(10);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/booking",
							"host": [
								"{{URL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific valid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Check the response body\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.firstname).to.eql(\"Anita\");",
									"  pm.expect(responseJson.lastname).to.eql(\"Deavers\");",
									"  pm.expect(responseJson.totalprice).to.eql(100);",
									"  pm.expect(responseJson.depositpaid).to.eql(false);",
									"  pm.expect(responseJson.bookingdates.checkin).to.eql(\"2022-11-29\");",
									"  pm.expect(responseJson.bookingdates.checkout).to.eql(\"2022-12-10\");",
									"  pm.expect(responseJson.additionalneeds).to.eql(\"Breakfast\");",
									"});",
									"",
									"// const responseJson = pm.response.json();",
									"const schemaNextAction = JSON.stringify(pm.variables.get(\"XXX\"));",
									"const responseJson = JSON.stringify(pm.response.json());",
									"console.log(responseJson);",
									"console.log(schemaNextAction);",
									"pm.test(\"Expects response to match expected JSON Schema\", function() {",
									"    pm.expect(responseJson).to.eql(schemaNextAction);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/booking/4",
							"host": [
								"{{URL}}"
							],
							"path": [
								"booking",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific invalid ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/booking/99",
							"host": [
								"{{URL}}"
							],
							"path": [
								"booking",
								"99"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:3001"
		},
		{
			"key": "XXX",
			"value": "{\n    \"firstname\": \"Anita\",\n    \"lastname\": \"Deavers\",\n    \"totalprice\": 100,\n    \"depositpaid\": false,\n    \"bookingdates\": {\n        \"checkin\": \"2022-11-29\",\n        \"checkout\": \"2022-12-10\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}"
		}
	]
}